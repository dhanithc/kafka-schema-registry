---
    version: '2'
    services:
      broker:
        image: confluentinc/cp-kafka:7.5.3
        hostname: broker
        container_name: broker
        networks:
          - btlnose-net
        ports:
          - "9092:9092"
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_PROCESS_ROLES: broker,controller
          KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
          KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
          CLUSTER_ID: 'kafka-docker-cluster-1'
    
      schema-registry:
        image: confluentinc/cp-schema-registry:7.5.3
        hostname: schema-registry
        container_name: schema-registry
        networks:
          - btlnose-net
        depends_on:
          - broker
        ports:
          - "8081:8081"
        environment:
          SCHEMA_REGISTRY_HOST_NAME: schema-registry
          SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
          SCHEMA_REGISTRY_LISTENERS: 'http://schema-registry:8081'

      kafkacat:
        image: confluentinc/cp-kafkacat
        networks:
          - btlnose-net
        depends_on:
          - broker
        command:
          - bash
          - -c
          - |
            sleep infinity
#      kafka-connect:
#        image: bsucaciu/kafka-connect-mongodb:2.5.0
#        hostname: kafka-connect
#        container_name: kafka-connect
#        depends_on:
#          - zookeeper
#          - broker
#          - schema-registry
#        ports:
#          - "8083:8083"
#        environment:
#          CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
#          CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
#          CONNECT_REST_PORT: 8083
#          CONNECT_GROUP_ID: compose-connect-group
#          CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
#          CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
#          CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
#          CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
#          CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
#          CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
#          CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
#          CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#          CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#          CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#          CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#          CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#          CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#          CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.5.0.jar
#          CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#          CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
#          CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
#          CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

#      mongodb:
#        image: mongo:6.0.13
#        hostname: mongodb
#        container_name: mongodb
#        ports:
#          - "27017:27017"
#        environment:
#          MONGO_INITDB_ROOT_USERNAME: admin
#          MONGO_INITDB_ROOT_PASSWORD: admin



      kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        networks:
          - btlnose-net
#        volumes:
#          - ./kafka-ui/config.yml:/etc/kafkaui/dynamic_config.yaml
        environment:
          DYNAMIC_CONFIG_ENABLED: 'true'
          KAFKA_CLUSTERS_0_NAME: local
          KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:29092'
          KAFKA_CLUSTERS_0_SCHEMAREGISTRY: 'http://schema-registry:8081'
        depends_on:
          - broker
          - schema-registry
        ports:
          - '8080:8080'
#        healthcheck:
#          test: wget --no-verbose --tries=1 --spider localhost:8080 || exit 1
#          interval: 5s
#          timeout: 10s
#          retries: 3
#          start_period: 30s
    networks:
      btlnose-net:
        driver: bridge